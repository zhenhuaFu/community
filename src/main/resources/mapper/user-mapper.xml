<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 重点检查任何拼写错误 -->
<mapper namespace="com.nowcoder.community.dao.UserMapper"> <!-- 为哪个mapper服务-->

    <sql id="selectFields">
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <sql id="insertFields">
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <!-- 对应UserMapper中的方法写接口   -->
    <select id="selectById" resultType="User"> <!--决定这个标签是对哪个方法服务的, 返回对象的类型-->
        <!--    有点像SQL语句-->
        select  <include refid="selectFields"></include>
        from user
        where id = #{id}  <!--代表引入方法的参数，传参-->
    </select>

    <select id="selectByName" resultType="User"> <!--决定这个标签是对哪个方法服务的, 返回对象的类型-->
        <!--    有点像SQL语句-->
        select <include refid="selectFields"></include>
        from user
        where username = #{username}  <!--代表引入方法的参数，传参-->
    </select>

    <select id="selectByEmail" resultType="User"> <!--决定这个标签是对哪个方法服务的, 返回对象的类型-->
        <!--    有点像SQL语句-->
        select <include refid="selectFields"></include>
        from user
        where email = #{email}  <!--代表引入方法的参数，传参-->
    </select>

    <insert id="insertUser" parameterType="User" keyProperty="id"> <!-- 主键 将id赋给user-->
        <!--    有点像SQL语句-->
        insert into user (<include refid="insertFields"></include>)
        values(#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl}, #{createTime})  <!--代表引入方法的参数，传参-->
    </insert>

    <update id="updateStatus">
        update user set status = #{status} where id = #{id}
    </update>

    <update id="updateHeader">
        update user set header_url = #{headerUrl} where id = #{id}
    </update>

    <update id="updatePassword">
        update user set password = #{password} where id = #{id}
    </update>

</mapper>